on:
  push:
    branches:
      - main

permissions:
  contents: write
  checks: write
  actions: read
  packages: write
  pull-requests: write

name: Release Please
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      tag: ${{ steps.release-please.outputs.tag_name }}
      upload_url: ${{ steps.release-please.outputs.upload_url }}
    steps:
      - uses: google-github-actions/release-please-action@e4dc86ba9405554aeba3c6bb2d169500e7d3b4ee # v4
        id: release-please
        with:
          release-type: python
          package-name: yafti
  package:
    name: Create RPM Release
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: 3.11
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1
        with:
          version: 1.4.0
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Build and upload to PyPI
        run: |
          poetry config pypi-token.pypi "$PYPI_UPLOAD_TOKEN"
          poetry build
          poetry publish
        env:
          PYPI_UPLOAD_TOKEN: ${{ secrets.PYPI_UPLOAD_TOKEN }}
      - name: Build RPM Package
        id: rpm_build
        uses: ublue-os/rpmbuild@master
        with:
          spec_file: "pkg/rpm.spec"
      - name: Upload release binaries
        uses: ublue-os/upload-assets@pass-in-tag
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./${{ steps.rpm_build.outputs.source_rpm_path }}*", "./${{ steps.rpm_build.outputs.rpm_dir_path }}noarch/*"]'
          tag: ${{ needs.release-please.outputs.tag }}
